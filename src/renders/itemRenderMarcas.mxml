<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					clipAndEnableScrolling="true" >
	<fx:Script>
		<![CDATA[
			import clases.Utileria;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			override public function set data(value:Object):void
			{
				try
				{
					super.data = value;
					comboBox.textInput.text = data.marca;
				}
				catch(error:Error)
				{
					trace(error);
				}   
			}
			
			internal function changeHandler(event:IndexChangeEvent):void{
				if(comboBox.selectedIndex > -1)
					data.marca = event.target.selectedItem.value;//;
				else
					data.marca = event.target.selectedItem;
			}
			
			internal function out(event:FocusEvent):void{
				var coincidencias:int = 0;
				for each(var item:Object in parentApplication.arrayMarcas){
					if(item.value == comboBox.textInput.text)
						coincidencias++;
				}
				
				if(coincidencias == 0){
					parentApplication.arrayMarcas.addItem({value:comboBox.textInput.text});
					
					var srt:Sort = new Sort();
					srt.fields = [new SortField("value")];
					parentApplication.arrayMarcas.sort = srt;
					parentApplication.arrayMarcas.refresh();
					
				}
				
				
			}
			
		]]>
	</fx:Script>
	<s:Rect id="background" visible="{data.error}" width="100%" height="100%">
		<s:fill>
			<s:SolidColor id="relleno" alpha=".5" color="red"/>
		</s:fill>
	</s:Rect>
	<s:ComboBox id="comboBox" width="100%" height="100%" change="changeHandler(event)" selectedIndex="-1"
				dataProvider="{parentApplication.arrayMarcas}" labelField="value" prompt="Seleccione" 
				click="comboBox.openDropDown()" enterState="comboBox.openDropDown()" styleName="defaultStyleCombobox" focusOut="out(event)"/>
	
</s:GridItemRenderer>
