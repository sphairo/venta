<?xml version="1.0" encoding="utf-8"?>
<s:GridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" clipAndEnableScrolling="true" xmlns:renders="renders.*" xmlns:components="components.*" buttonMode="true">
	
	<fx:Script>
		<![CDATA[
			import clases.GlobalStatic;
			
			import com.anotherflexdev.ui.AlertError;
			
			import mx.events.FlexMouseEvent;
			import mx.utils.StringUtil;
			internal function onMouseDownOutside(event:FlexMouseEvent):void {
				event.target.close();
			}
			
			internal function defaultCallout_mouseDownHandler(event:MouseEvent):void
			{
				defaultCallout.close();
			}
			
			internal function onShowDefaultCalloutClick():void {
				defaultCallout.open(img);
			}
			
			private const textFilter:FileFilter = new FileFilter("Images", ".gif;*.jpeg;*.jpg;*.png");
			private var variables:URLVariables = new URLVariables();
			[Bindable] private var fileReferenceListImagen:FileReferenceList;
			
			protected function seleccionarImagen():void
			{
				fileReferenceListImagen = new FileReferenceList();
				fileReferenceListImagen.addEventListener(Event.SELECT, fileSelectedHandler);
				
				var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg; *.jpeg; *.gif; *.png");
				var textTypes:FileFilter = new FileFilter("Text Files (*.txt, *.rtf)", "*.txt; *.rtf");
				var allTypes:Array = new Array(imageTypes, textTypes);
				var fileRef:FileReference = new FileReference();
				
				fileReferenceListImagen.browse(allTypes);
			}
			
			private function fileSelectedHandler(event:Event):void 
			{
				var fileReference:FileReference;
				var fileReferenceList:FileReferenceList = FileReferenceList(event.target);
				var fileList:Array = fileReferenceList.fileList;
				
				for (var indice:uint = 0; indice < fileList.length; indice++)
				{
					fileReference = FileReference(fileList[indice]);
					fileReference.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA, uploadCompleteData);
					try
					{
						var urlRequest:URLRequest = new URLRequest("http://localhost/ventas/amfphp/services/subirImagen.php");
						fileReference.upload(urlRequest);
					}
					catch(error:Error)
					{
						AlertError.show("Error al cargar la imagen " + error.message.toString());	
					}
				}
			}
			
			private function uploadCompleteData(evt:DataEvent):void {
				data.path = StringUtil.trim(evt.data);
			}
			
			protected function img_clickHandler():void
			{
				if(data.isNew == true && data.path == null)
					seleccionarImagen();
				else
					onShowDefaultCalloutClick();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Callout id="defaultCallout" horizontalCenter="0" height="225"
				   mouseDown="defaultCallout_mouseDownHandler(event)"
				   mouseDownOutside="onMouseDownOutside(event)" verticalCenter="0">
			<s:layout>
				<s:VerticalLayout>
				</s:VerticalLayout>
			</s:layout>
			<s:Image width="152" height="152" source="{img.source}" top="5"/>
			<renders:renderCambiarFoto click="seleccionarImagen()"/>
		</s:Callout>
		<components:SparkCallout/>
	</fx:Declarations>
	<s:Rect id="background" visible="{data.error}" width="100%" height="100%">
		<s:fill>
			<s:SolidColor id="relleno" alpha=".5" color="red"/>
		</s:fill>
	</s:Rect>
	<s:Image id="img" width="32" height="32" click="img_clickHandler()"
			 horizontalCenter="0" verticalCenter="0" source="{data.path != null ? (GlobalStatic.url_image+data.path) : 'img/camara.png'}"/>
</s:GridItemRenderer>
