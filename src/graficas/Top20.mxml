<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:amcharts="http://www.amcharts.com/com_internal"
				   width="100%" height="100%" preinitialize="preinitializeHandler(event)">
	<fx:Declarations>
		<mx:RemoteObject id="MiObjetoRemotoProducto" destination="amfphp" fault="errorGeneral(event)"
						 showBusyCursor="true" source="producto">
			<s:method name="top20Productos" result="top20ProductosExito(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.effects.easing.Elastic;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;			
			
			[Bindable]
			private var colores:Array = [
				{color:0xFF0F00},
				{color:0xFF6600},
				{color:0xFF9E01},
				{color:0xFCD202},
				{color:0xF8FF01},
				{color:0xB0DE09},
				{color:0x04D215},
				{color:0x999900},
				{color:0x996666},
				{color:0x996633},
				{color:0x0D8ECF},
				{color:0x0D52D1},
				{color:0x2A0CD0},
				{color:0x8A0CCF},
				{color:0xCD0D74},
				{color:0x754DEB},
				{color:0xDDDDDD},
				{color:0x999999},
				{color:0x666666},
				{color:0x333333}];
			
			internal function preinitializeHandler(event:FlexEvent):void
			{
				MiObjetoRemotoProducto.top20Productos.send();
			}
			
			internal function errorGeneral(error:FaultEvent):void
			{
				trace(error.fault.faultString);
			}
			
			internal function top20ProductosExito(event:ResultEvent):void {
				removeEventListener(ResultEvent.RESULT, top20ProductosExito);
				encapsulado((com.adobe.serialization.json.JSON.decode(String(event.result))));	
			}
			
			[Bindable] internal var dp:ArrayCollection = new ArrayCollection();
			
			internal function encapsulado(collection:*):void{
				var index:uint = 0;
				for each(var item:Object in collection){
					dp.addItem({
						clave:item.clave,
						total:item.total,
						nombre:item.nombre,
						color:colores[index].color
					});
					index++;
				}
			}
			
		]]>
	</fx:Script>
	
	<amcharts:AmSerialChart id="chart" width="100%" height="100%" categoryField="nombre"
							dataProvider="{dp}" rotate="true" startDuration="2"
							startEffect="{Elastic.easeOut}" autoMargins="false" marginTop="10"
							marginLeft="5" startFrom="left"
							marginRight="15" marginBottom="30">        
		<amcharts:graphs>
			<amcharts:AmGraph balloonText="[[value]] : [[category]]" colorField="color"
							  cornerRadiusTop="10" fillAlphas="[0.8]" labelPosition="bottom"
							  labelText="[[value]] : [[nombre]]" lineAlpha="0" type="column"
							  valueField="total"/>                        
		</amcharts:graphs>
		
		<!--<amcharts:valueAxes>
			<amcharts:ValueAxis title="Los 20 productos mÃ¡s vendidos" titleTextColor="#CC0000"/>
		</amcharts:valueAxes>		-->
		
		<amcharts:categoryAxis>
			<amcharts:CategoryAxis axisAlpha="0" gridAlpha="0" labelsEnabled="false"/>
		</amcharts:categoryAxis>
		
		<amcharts:balloon>
			<amcharts:AmBalloon borderAlpha="1" borderColor="#FFFFFF" borderThickness="2"
								cornerRadius="10"/>                
		</amcharts:balloon>    
		
		<amcharts:chartCursor>
			<amcharts:ChartCursor categoryBalloonEnabled="false" cursorAlpha="0" zoomable="false"/>                    
		</amcharts:chartCursor>    
		
		<amcharts:legend>
			<amcharts:AmLegend backgroundAlpha="0.0" backgroundColor="0"/>
		</amcharts:legend>
	</amcharts:AmSerialChart>
</s:BorderContainer>
